{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/end-page/end-page.component.html","webpack:///./src/app/end-page/end-page.component.scss","webpack:///./src/app/end-page/end-page.component.ts","webpack:///./src/app/handle-api.service.ts","webpack:///./src/app/quiz-page/quiz-page.component.html","webpack:///./src/app/quiz-page/quiz-page.component.scss","webpack:///./src/app/quiz-page/quiz-page.component.ts","webpack:///./src/app/splash-page/splash-page.component.html","webpack:///./src/app/splash-page/splash-page.component.scss","webpack:///./src/app/splash-page/splash-page.component.ts","webpack:///./src/app/user-data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SplashPageComponent } from './splash-page/splash-page.component';\nimport { QuizPageComponent } from './quiz-page/quiz-page.component';\nimport { EndPageComponent } from './end-page/end-page.component';\n\nconst routes: Routes = [\n  {\n    path :'',\n    component : SplashPageComponent\n  },\n  {\n    path : 'quiz-page',\n    component : QuizPageComponent\n  },\n  {\n    path : 'end-page',\n    component : EndPageComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'ng-trivia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SplashPageComponent } from './splash-page/splash-page.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { QuizPageComponent } from './quiz-page/quiz-page.component';\nimport { FormsModule } from '@angular/forms';\nimport { EndPageComponent } from './end-page/end-page.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SplashPageComponent,\n    QuizPageComponent,\n    EndPageComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    HttpClientModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Well done {{this.userData.userName}}</h1>\\n    <p class=\\\"lead\\\">You've answered correctly to {{this.userData.userScore}} on 10</p>\\n  </div>\\n</div>\\n\\n\\n<div class=\\\"container\\\">\\n  <button type=\\\"button\\\" class=\\\"btn btn-outline-warning btn-lg btn-block\\\" (click)=\\\"restart()\\\">play again</button>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VuZC1wYWdlL2VuZC1wYWdlLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { UserDataService } from '../user-data.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-end-page',\n  templateUrl: './end-page.component.html',\n  styleUrls: ['./end-page.component.scss']\n})\nexport class EndPageComponent implements OnInit {\n\n  constructor(public userData : UserDataService, public router : Router) { }\n\n  ngOnInit() {\n  }\n\n  restart(){\n    this.router.navigate(['']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HandleApiService {\n\n  constructor(private http : HttpClient) { }\n\n  public categoryUrl : string = 'https://opentdb.com/api_category.php';\n  public questionsUrl : string = 'https://opentdb.com/api.php?amount=10&type=multiple';\n  public questions: any[];\n  \n\n  public getQuestionsUrl(category, difficulty) : string {\n    return `${this.questionsUrl}&category=${category}&difficulty=${difficulty}`;\n  }\n\n  public getCategories() : any{\n    return this.http.get(this.categoryUrl);  \n  }\n\n  public getQuestions(category : number, difficulty : string) : any{\n    return this.http.get(this.getQuestionsUrl(category, difficulty));  \n  }\n}\n","module.exports = \"<!--head-->\\n<div class=\\\"jumbotron jumbotron-fluid bg-warning\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\" routerLink=\\\"\\\">It's Trivial!</h1>\\n    <p class=\\\"lead\\\">do your best, {{this.userData.userName}}</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\" *ngIf=\\\"this.handleApi.questions\\\">\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <h5 [innerHTML]=\\\"this.handleApi.questions[this.indexQuestion].question\\\"></h5>\\n    </div>\\n  </div>\\n\\n  <!---inputs-->\\n  <div class=\\\"alert\\\" *ngFor=\\\"let answer of answers\\\" (click)=\\\"answerChecker(answer)\\\" [class.bg-success]=\\\"answer == correctAnswerSelected\\\" [class.bg-danger]=\\\"answer == incorrectAnswerSelected\\\" >\\n    <div class=\\\"custom-control custom-radio\\\">\\n      <input type=\\\"radio\\\" id=\\\"{{answer}}\\\" name=\\\"customRadio\\\" class=\\\"custom-control-input\\\" value=\\\"{{answer}}\\\"  [disabled]=\\\"disableButton\\\">\\n      <label class=\\\"custom-control-label\\\" for=\\\"{{answer}}\\\" [innerHTML]=\\\"answer\\\"></label>\\n    </div>\\n  </div>\\n  \\n  <!--pagination-->\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col\\\">\\n      <nav class=\\\"d-flex justify-content-center mx-auto\\\" *ngIf=\\\"nextButton\\\" >\\n          <ul class=\\\"pagination justify-content-center\\\">\\n            <li class=\\\"page-item\\\">\\n              <a class=\\\"page-link\\\" (click)=\\\"goNextQuestion()\\\">Next</a>\\n            </li>\\n          </ul>\\n      </nav>\\n    </div>\\n  </div>\\n  \\n</div>\\n\"","module.exports = \".alert {\\n  border: 1px solid #e9ecef; }\\n\\n.alert:hover {\\n  border: 1px solid black; }\\n\\n.custom-control-input:disabled ~ .custom-control-label {\\n  color: black !important; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZG9hcmRvL0Rlc2t0b3AvZGV2L25nLXRyaXZpYWwvc3JjL2FwcC9xdWl6LXBhZ2UvcXVpei1wYWdlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0kseUJBQXdCLEVBQUE7O0FBRzVCO0VBQ0ksdUJBQXVCLEVBQUE7O0FBRzNCO0VBQ0ksdUJBQXVCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9xdWl6LXBhZ2UvcXVpei1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFsZXJ0e1xuICAgIGJvcmRlcjoxcHggc29saWQgI2U5ZWNlZjtcbn1cblxuLmFsZXJ0OmhvdmVye1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xufVxuXG4uY3VzdG9tLWNvbnRyb2wtaW5wdXQ6ZGlzYWJsZWR+LmN1c3RvbS1jb250cm9sLWxhYmVse1xuICAgIGNvbG9yOiBibGFjayAhaW1wb3J0YW50O1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { HandleApiService } from '../handle-api.service'\nimport { Router } from '@angular/router';\nimport { UserDataService } from '../user-data.service';\n\n@Component({\n  selector: 'app-quiz-page',\n  templateUrl: './quiz-page.component.html',\n  styleUrls: ['./quiz-page.component.scss']\n})\nexport class QuizPageComponent implements OnInit {\n\n  constructor(public handleApi : HandleApiService, public userData : UserDataService, public router : Router) { }\n\n  public indexQuestion : number = 0;\n  public answers : any = [];\n  public nextButton : boolean = false;\n  public disableButton : boolean = false;\n\n  public correctAnswerSelected : string;\n  public incorrectAnswerSelected : string;\n\n\n  ngOnInit() {\n    this.userData.userScore = 0;\n    this.buildAnswers()\n    //console.log(this.answers)\n    console.log(this.handleApi.questions)\n  }\n\n\n  buildAnswers(){\n    this.nextButton = false;\n    this.disableButton = false;\n\n    this.correctAnswerSelected = '';\n    this.incorrectAnswerSelected = '';\n\n    if ( !this.handleApi.questions ){\n      return this.router.navigate(['/']);\n    }\n\n    let question = this.handleApi.questions[this.indexQuestion];\n    \n    this.answers = [question.correct_answer, ...question.incorrect_answers];\n    this.shuffle(this.answers);\n    // if ( question === undefined || this.answers === undefined ){\n    //   this.router.navigate(['/end-page']);\n    // }\n  }\n\n  shuffle(array) {\n    array.sort(() => Math.random() - 0.5);\n  }\n  answerChecker(answer){\n    if (this.incorrectAnswerSelected || this.correctAnswerSelected)\n      return;\n\n    this.nextButton = true;\n    //console.log(this.userAnswer);\n    let correctAnswer = this.handleApi.questions[this.indexQuestion].correct_answer;\n\n    this.correctAnswerSelected = correctAnswer;\n\n    if( answer == correctAnswer ){\n      ++this.userData.userScore;\n    } else {\n      this.incorrectAnswerSelected = answer;\n      //alert('correct answer is: ' + this.handleApi.questions[this.indexQuestion].correct_answer)\n    }\n    this.disableRadioButtons()\n  }\n\n  goNextQuestion(){\n    if(this.indexQuestion === 9){\n      this.router.navigate(['/end-page']);\n    }\n    ++this.indexQuestion;\n    this.buildAnswers()\n  }\n\n  disableRadioButtons(){\n    this.disableButton = true;\n  }\n\n}\n\n\n\n\n/*\nTODO\n\n  -display right answer if you choose the wrong one\n  -solve random bug on init of 1st api call\n  -input all over the button\n\n*/","module.exports = \"<div class=\\\"jumbotron jumbotron-fluid\\\" [class.bg-warning]=\\\"this.userData.userName && this._category && this._difficulty\\\">\\n  <div class=\\\"container\\\">\\n    <h1 class=\\\"display-4\\\">Let's play Trivial</h1>\\n    <p class=\\\"lead\\\">I have few questions for you, let's start right now!</p>\\n  </div>\\n</div>\\n\\n<div class=\\\"container\\\">\\n  <form>\\n    <div class=\\\"row\\\">\\n\\n      <div class=\\\"col\\\">\\n        <label for=\\\"username\\\">Insert your name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" [(ngModel)]=\\\"this.userData.userName\\\" name=\\\"username\\\">\\n      </div>\\n      \\n      <div class=\\\"col\\\">\\n          <label class=\\\"my-1 mr-2\\\" for=\\\"category\\\">Select a category</label>\\n          <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"category\\\" [(ngModel)]=\\\"_category\\\" name=\\\"category\\\">\\n            <option selected>Choose...</option>\\n            <option *ngFor=\\\"let data of categoryData\\\" value=\\\"{{data.id}}\\\">{{data.name}}</option>\\n          </select>\\n      </div>\\n\\n      <div class=\\\"col\\\">\\n          <label class=\\\"my-1 mr-2\\\" for=\\\"difficulty\\\">Select difficulty</label>\\n          <select class=\\\"custom-select my-1 mr-sm-2\\\" id=\\\"difficulty\\\" [(ngModel)]=\\\"_difficulty\\\" name=\\\"difficulty\\\">\\n            <option selected>Choose...</option>\\n            <option value=\\\"easy\\\">Easy</option>\\n            <option value=\\\"medium\\\">Medium</option>\\n            <option value=\\\"hard\\\">Hard</option>\\n          </select>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"button\\\" class=\\\"btn btn-lg btn-block\\\" [class.btn-warning]=\\\"this.userData.userName && this._category && this._difficulty\\\" (click)=\\\"saveQuestionsData()\\\">I'm ready!</button>\\n  </form>\\n  \\n  \\n</div>\\n\"","module.exports = \".col {\\n  margin: auto; }\\n\\nbutton {\\n  margin-top: 20vh; }\\n\\nform {\\n  margin-top: 10vh; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9lZG9hcmRvL0Rlc2t0b3AvZGV2L25nLXRyaXZpYWwvc3JjL2FwcC9zcGxhc2gtcGFnZS9zcGxhc2gtcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQWEsRUFBQTs7QUFHakI7RUFDSSxnQkFBZ0IsRUFBQTs7QUFHcEI7RUFDSSxnQkFBZ0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NwbGFzaC1wYWdlL3NwbGFzaC1wYWdlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbCB7XG4gICAgbWFyZ2luIDogYXV0bztcbn1cblxuYnV0dG9ue1xuICAgIG1hcmdpbi10b3A6IDIwdmg7XG59XG5cbmZvcm17XG4gICAgbWFyZ2luLXRvcDogMTB2aDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { HandleApiService } from '../handle-api.service';\nimport { Router } from '@angular/router';\nimport { UserDataService } from '../user-data.service';\n\n\n@Component({\n  selector: 'app-splash-page',\n  templateUrl: './splash-page.component.html',\n  styleUrls: ['./splash-page.component.scss']\n})\nexport class SplashPageComponent implements OnInit {\n  categoryData: any[];\n  _category : number;\n  _difficulty : string;\n\n  constructor(public handleApi : HandleApiService, public userData : UserDataService, public router : Router) { }\n\n  ngOnInit() {\n    this.showCategories();\n  }\n  \n  showCategories() {\n    this.handleApi.getCategories().subscribe(\n      (response:any) =>{\n        this.categoryData = response.trivia_categories;\n        console.log(this.categoryData)\n      });\n  }\n\n  saveQuestionsData(){\n    if ( !this.userData.userName || !this._category || !this._difficulty){\n      return alert('Please, fill every field')\n    }\n    this.handleApi.getQuestions(this._category, this._difficulty).subscribe(\n      response => {\n        this.handleApi.questions = response.results;\n        if (this.handleApi.questions.length == 0) {\n          return this.saveQuestionsData();\n        }\n        this.router.navigate(['/quiz-page']);\n      }\n    );\n    \n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserDataService {\n\n  constructor() { }\n\n  public userName : string;\n  public userScore : number = 0;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}